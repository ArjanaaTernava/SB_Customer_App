useFakeCustomerRepo=true
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=on_param
#try always, on_param, never for stacktrace

#database configuration
# defines the url of the database to connect to (in this case an in-memory database)
spring.datasource.url=jdbc:h2:mem:testdb-dev-environment
# defines the driver to use to connect to the database
spring.datasource.driver-class-name=org.h2.Driver
# defines the username to use to connect to the database
spring.datasource.username=development
# defines the password to use to connect to the database
spring.datasource.password=dev-password

# defines the dialect to use to query the database
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# defines the show-sql property to enable the SQL logging
spring.jpa.show-sql=true

# defines h2 console enabled so we can access the database via the browser
spring.h2.console.enabled=true
# defines the path to access the h2 console
spring.h2.console.path=/h2-dev-environment

# to remove the banner
spring.main.banner-mode=off

# exporting the logs to a file
logging.file.name=logs/spring-boot-logging.log

# logging pattern to JSON
logging.pattern.file="{\"time\": \"%d\", \"level\": \"%p\", \"correlation-id\": \"%X{X-Correlation-Id}\", \"source\": \"%logger{63}:%L\", \"message\": \"%replace(%m%wEx{6}){'[\r\n]+', '\\n'}%nopex\"}%n"

management.endpoint.health.show-details=always
management.endpoint.prometheus.enabled=true
management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=health, prometheus, metrics


info.app.name=SB Intro
info.app.description=Spring Boot is awesome
info.app.version=1.0.0
info.company.name=Evonem